const express = require('express');
const multer = require('multer');
const fs = require('fs');
const path = require('path');
const AWS = require('aws-sdk');
const router = express.Router();

const s3 = new AWS.S3({
  accessKeyId: process.env.ID,
  secretAccessKey: process.env.SECRET,
  region: process.env.REGION
});

const BUCKET_NAME = process.env.BUCKET_NAME;

// ‚úÖ multer ÏÑ§Ï†ï
const storage = multer.diskStorage({
  destination: (req, file, cb) => cb(null, path.join(__dirname, '../uploadedFiles')),
  filename: (req, file, cb) => cb(null, `${Date.now()}_${file.originalname}`)
});
const upload = multer({ storage });

// ‚úÖ POST /uploadFile
router.post('/uploadFile', upload.single('attachment'), async (req, res) => {
  console.log('‚úÖ [uploadFile] Ìò∏Ï∂úÎê®');
  if (!req.file) {
    console.error('‚ùå [uploadFile] ÌååÏùºÏù¥ ÏóÜÏäµÎãàÎã§.');
    return res.status(400).json({ error: 'No file uploaded' });
  }

  try {
    const filename = req.file.filename;
    const filePath = path.join(__dirname, '../uploadedFiles', filename);
    console.log(`üìÅ Ï†ÄÏû•Îêú ÌååÏùº: ${filePath}`);

    const fileContent = fs.readFileSync(filePath);

    const params = {
      Bucket: BUCKET_NAME,
      Key: `videos/${filename}`,
      Body: fileContent,
      ContentType: req.file.mimetype
    };

    console.log(`üì§ S3 ÏóÖÎ°úÎìú Ï§ë... Key: videos/${filename}`);
    s3.upload(params, (err, data) => {
      fs.unlink(filePath, () => {}); // Î°úÏª¨ ÌååÏùº ÏÇ≠Ï†ú
      if (err) {
        console.error('‚ùå S3 ÏóÖÎ°úÎìú Ïã§Ìå®:', err);
        return res.status(500).json({ error: 'S3 Upload failed', details: err });
      }

      console.log('‚úÖ S3 ÏóÖÎ°úÎìú ÏôÑÎ£å:', data.Location);
      res.status(200).json({
        message: 'Upload successful',
        url: data.Location,
        filename: filename.replace(/\.mp4$/i, '')
      });
    });
  } catch (err) {
    console.error('‚ùå ÏÑúÎ≤Ñ ÏóêÎü¨:', err);
    return res.status(500).json({ error: 'Server error', details: err.message });
  }
});


// ‚úÖ GET /getFeedback/:filename
router.get('/getFeedback/:filename', async (req, res) => {
  const filename = req.params.filename.endsWith('.json')
    ? req.params.filename
    : `${req.params.filename}.json`;

  const params = {
    Bucket: BUCKET_NAME,
    Key: `feedbacks/${filename}`
  };

  try {
    const data = await s3.getObject(params).promise();
    const feedback = JSON.parse(data.Body.toString('utf-8'));
    res.json(feedback);
  } catch (err) {
    console.error('‚ùå Failed to fetch feedback:', err.message);
    res.status(404).json({ error: 'Feedback not found' });
  }
});

module.exports = router;
